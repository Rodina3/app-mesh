Description: >
  This template deploys a bastion inside private subnet

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  # bastion param
  EC2Ami:
    Description: EC2 AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId:
        'Fn::ImportValue': !Sub "${EnvironmentName}:VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2Ami
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref BastionSecurityGroup
      SubnetId:
        'Fn::ImportValue': !Sub "${EnvironmentName}:PublicSubnet1"
      Tags:
        - Key: Name
          Value: bastion

Outputs:
  BastionIP:
    Description: Public IP for ssh access to bastion host
    Value:
      'Fn::GetAtt': [ BastionHost, PublicIp ]
